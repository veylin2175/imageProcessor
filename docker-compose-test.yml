services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8082:8075"
    environment:
      - HTTP_SERVER_ADDRESS=0.0.0.0:8075
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_USER=test_user
      - DATABASE_PASSWORD=test_password
      - DATABASE_NAME=test_db
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TOPIC=test_topic
      - CONFIG_PATH=./config/test.yml
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_healthy

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_password
      - POSTGRES_DB=test_db
    volumes:
      - ./processed:/app/processed
      - ./uploads:/app/uploads
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U test_user" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: bitnami/kafka:3.7
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list" ]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    healthcheck:
      test: [ "CMD-SHELL", "echo stat | nc localhost 2181" ]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate:v4.16.2
    depends_on:
      db:
        condition: service_healthy
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://test_user:test_password@db:5432/test_db?sslmode=disable",
        "up"
      ]
    volumes:
      - ./migrations:/migrations