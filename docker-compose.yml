services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092

  db:
    image: postgres:15
    container_name: image-processor-db
    restart: always
    environment:
      POSTGRES_USER: image-processor-user
      POSTGRES_PASSWORD: 3356
      POSTGRES_DB: image_processor_db
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: .
    ports:
      - "8075:8075"
    depends_on:
      - db
      - kafka
    volumes:
      - ./config:/app/config
      - ./static:/app/static
      - ./uploads:/app/uploads
      - ./processed:/app/processed
      - ./watermark.png:/app/watermark.png
    environment:
      CONFIG_PATH: "/app/config/local.yml"

  migrate:
    image: migrate/migrate
    depends_on:
      - db
    command: [ "-path", "/migrations", "-database", "postgres://image-processor-user:3356@db:5432/image_processor_db?sslmode=disable", "up" ]
    volumes:
      - ./migrations:/migrations

volumes:
  db-data: